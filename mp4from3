#!/usr/bin/perl
use 5.018 ; use strict ; use warnings ; 
use feature qw[say] ;
use File::Temp ; 
use Getopt::Std ; getopts 'a:d:g:ln1D', \my %o ; 
use Term::ANSIColor qw[uncolor colorstrip :constants] ; $Term::ANSIColor::AUTORESET = 1 ;
use Time::HiRes qw[gettimeofday tv_interval] ; 
my $time_start = [ gettimeofday ] ; 

END {
  my $elapsed = sprintf "%0.4f" , tv_interval ( $time_start , [ gettimeofday ] ) ;
  say STDERR BLUE BOLD "--- $elapsed seconds has spent." ;
}
my @tgt = @ARGV ? @ARGV : grep { m/mp.$/i } @{[glob $o{D}? '*4' : '*3']} ; # targetを略したつもり
my $N = $o{n} ? "\\\n" : '' ; # 生成するコマンド文の途中に '\'の後に改行文字を、挿入するため。

# 一時ファイルである 2x2 の画像ファイル のjpg形式ファイルを作る。
my $image = $o{g} // do { my $t = File::Temp -> new ( UNLINK => 1 , suffix => '.jpg') ;
our $trs = q[ffd8ffe000104a46494600010100000100010000ffed003850686f746f73
   686f7020332e30003842494d04040000000000003842494d0425000000000010d41d8
   cd98f00b204e9800998ecf8427effe202204943435f50524f46494c45000101000002
   106170706c040000006d6e74725247422058595a2007e600070005000e001c0021616
   373704150504c000000004150504c000000000000000000000000000000000000f6d6
   000100000000d32d6170706c0375f400541ee953f0febc4404ba605a0000000000000
   00000000000000000000000000000000000000000000000000a64657363000000fc00
   0000646370727400000160000000237774707400000184000000147258595a0000019
   8000000146758595a000001ac000000146258595a000001c000000014725452430000
   01d40000001063686164000001e40000002c62545243000001d400000010675452430
   00001d40000001064657363000000000000000a4c472048445220344b000000000000
   000000000000000000000000000000000000000000000000000000000000000000000
   000000000000000000000000000000000000000000000000000000000000000000000
   000000007465787400000000436f70797269676874204170706c6520496e632e2c203
   2303232000058595a20000000000000f31600010000000116ca58595a200000000000
   0079d7000038510000005c58595a2000000000000054d90000ba5000000b9b58595a2
   0000000000000282600000d600000c7357061726100000000000000000001f6047366
   33320000000000010c72000005f8fffff31d000007ba0000fd72fffffb9dfffffda40
   00003d90000c071ffdb00430003020202020203020202030303030406040404040408
   0606050609080a0a090809090a0c0f0c0a0b0e0b09090d110d0e0f101011100a0c121
   31210130f101010ffdb00430103030304030408040408100b090b1010101010101010
   101010101010101010101010101010101010101010101010101010101010101010101
   010101010101010ffc00011080004000403011100021101031101ffc4001400010000
   0000000000000000000000000009ffc40014100100000000000000000000000000000
   000ffc40014010100000000000000000000000000000004ffc4001411010000000000
   0000000000000000000000ffda000c03010002110311003f0043481dffd9] ; 
   print {$t} pack 'H*', $trs =~ s/\n//gr ; $t 
 } ;
 $image = ITALIC BOLD $image ;

for ( @tgt  ) {
  my ($cmd, $from, $to)  = ( q[] , undef, undef )  ;
  if ( $o{D} ) { $cmd = qq [ rm $_ ] }
  else { 
    $from = BOLD $_ ;
    s/[-]//g ; 
    s/[_+ ]/_/g ; 
    s/\.mp3$/.mp4/i ;
    $to = BOLD $_ ; 
    $cmd .= "time " ;
    $cmd .= ITALIC BOLD qq[ffmpeg ] ; 
    $cmd .= qq[-loop 1 -i $image -i '$from' $N] ; 
    $cmd .= " -c:v libx264 -tune stillimage " ; 
    $cmd .= " -c:a aac -strict experimental " ; 
    $cmd .= " -b:a 192k -pix_fmt yuv420p " ; 
    $cmd .= " -shortest '$to' ;" ;
  }
  $cmd = colorstrip $cmd if $o{1} ;  # <-- トリッキーかも。 colorstrip と uncolor の違いが気になり中。
  say $cmd if ! $o{l} ; 
  say "$from\t-->\t$to" if ! $o{D} && $o{l} ;	
  $cmd = colorstrip $cmd ;  # <-- トリッキーかも。  
  qx[$cmd] if ($o{d}//'') eq 'o' ; # -do または -d o というオプションになっていたら、生成したコマンド文を実行する。
}


say STDERR BOLD CYAN "-- In order to actually run the convert program, do as `$0 @ARGV -do '" unless ($o{d}//'') eq 'o' ; 

## ヘルプの扱い
sub VERSION_MESSAGE {}
sub HELP_MESSAGE {
  use FindBin qw[ $Script ] ; 
  $ARGV[1] //= '' ;
  open my $FH , '<' , $0 ;
  while(<$FH>){
    s/\$0/$Script/g ;
    print $_ if s/^=head1// .. s/^=cut// and $ARGV[1] =~ /^o(p(t(i(o(ns?)?)?)?)?)?$/i ? m/^\s+\-/ : 1;
  }
  close $FH ;
  exit 0 ;
}

=encoding utf8

=head1 

  $0 [ファイル名|ファイル名のパターン] [繰り返し] ..

    MP3形式ファイル(音声ファイル)をMP4形式ファイル(動画)に変換する。
    -do などのオプション無しだとコマンド文を出力することをだけをして完了する。
    このコマンドを実行すると、ファイル名を引数として指定しない限り、
    そのディレクトリ(カレントディレクトリ)に含まれている拡張子が.mp3のファイルを全て使う。
    -g FILE で画像ファイルを指定しない場合、2x2の灰色の静止画を、映像として使用する。


 オプション :

    -do  : 生成するコマンド文を、システム上で実行する。(単にコマンド文を見せるだけではない。)
    -g FILE : 静止画のファイル。縦の長さも横の長さも偶数である必要がある。jpgとpngで動作する。(graphic)
    -l : 元のmp3ファイルがどう変換されるかを(TSV形式で)出力する。(list)
    -n : コマンド文を視覚的に 分かりやすくするために、改行文字を途中に挿入して、元々長いコマンド文の出力の横幅を狭くする。

    -1 : コマンド文の出力に色の加工をしない。(太字やイタリック体にする加工をしなくなる。)
    -D : 上書きされるはずのファイルの削除。ファイル名を指定しないと、そのディレクトリの*.mp3を対象にする。(Delete)

    --help :  オンラインヘルプマニュアルを表示する。(この画面と同じである。)

 注意 : 

   * このコマンドは システムに ffmpeg がインストールされていることを前提とする。OSXなら brew intall ffmpeg 実行するなどすること。
   * ffmpeg が上書きするかどうか聞いてくるかもしれない。その場合は、mp4from3 -D を試すのが良い。もっともプリミティブな方法は、そのmp4ファイルを手で消すこと。

 
 作成メモ : 

   1. 最初は2019年6月7日(金)に購入した英語の教材の本に付属していたmp3形式の音声ファイルをYouTubeで非公開で聞くことが
     できたら、音声再生の速度が調整などできて便利であると考えて、このプログラムを再生。(Japan Timesだった。)
   2. 同じ年の2019年7月1日(月) に少し改良。さらに1〜3回くらい改良。
   3. 2022年7月4日(月) と7月6日(水) に、それまで、加えたかった要素を大幅に加えた。
   4. 2022年7月19日(火)に、-g オプションを追加(jpgとpngは確かめた。gifはどうさせず)。コマンド文を色加工して分かりやすくした。-aを除去。-Dも追加。

 作成者 : 下野寿之

=cut

